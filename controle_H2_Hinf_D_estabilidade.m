function [optimal_Kpf,optimal_WD,optimal_XD] =...
    controle_H2_Hinf_D_estabilidade(...
        A_x,B_u,B_d,C_x2,D_u2,C_xinf,D_uinf,D_dinf,...
        alpha_v,beta_v,theta_s,r_d,q_d,w_H,e_P,...
        c_H2,c_Hinf,Yalmip_sdpsettings)
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

    n_x = size(A_x,1);
    n_u = size(B_u,2);
    n_d = size(B_d,2);
    n_y = size(C_x2,1);
    n_z = size(C_xinf,1);

    XD  = sdpvar(n_x,n_x,'symmetric');
    WD  = sdpvar(n_u,n_x,'full');
    LMIs = XD>=eps*eye(n_x);
    
    if ~isempty(alpha_v)
        Ax_Valpha = A_x+alpha_v*eye(n_x);
        LMIs = [ LMIs, Ax_Valpha*XD+XD*Ax_Valpha'+...
                 B_u*WD+WD'*B_u'<=-eps*eye(n_x)  ];
    end
    
    if ~isempty(beta_v)
        Ax_Vbeta = -A_x-beta_v*eye(n_x);
        LMIs = [ LMIs, Ax_Vbeta*XD+XD*Ax_Vbeta'-...
                 B_u*WD-WD'*B_u'<=-eps*eye(n_x) ];
    end
    
    if ~isempty(r_d)
        Ax_Dqr = A_x+q_d*eye(n_x); 
        LMIs = [ LMIs,...
                [ -r_d*XD, Ax_Dqr*XD+Tilde_Bu*WD;...
                  XD*Tilde_Lambda_Dqr'+WD'*Tilde_Bu', -r_d*XD ]...
                  <=-eps*eye(2*n_x)    ];
    end
    
    if ~isempty(theta_s)
        Ax_sin = A_x*sin(theta_s);
        Ax_cos = A_x*cos(theta_s);
        Bu_sin = B_u*sin(theta_s);
        Bu_cos = B_u*cos(theta_s);
        LMIs =[ LMIs,...
                [ Ax_sin*XD+XD*Ax_sin'+...
                  Bu_sin*WD+WD'*Bu_sin',...
                  Ax_cos*XD-XD*Ax_cos'+...
                  Bu_cos*WD-WD'*Bu_cos';...
                  XD*Ax_cos'-Ax_cos*XD+...
                  WD'*Bu_cos'-Bu_cos*WD,...
                  Ax_sin*XD+XD*Ax_sin'+...
                  Bu_sin*WD+WD'*Bu_sin'...
                ]<=-eps*eye(2*n_x) ];
    end
    
     if ~isempty(e_P)
        Ax_Pe = (Lambda-e_P*eye(n_x))/2;                
        LMIs = [ LMIs,...
                    [   Ax_Pe*XD+XD*Ax_Pe'+...
                        B_u/2*WD+WD'*B_u'/2,...
                        -A_x*XD-B_u*WD;...
                        -XD*A_x'-WD'*B_u',...
                        A_x*XD/2+XD*A_x'/2+...
                        B_u/2*WD+WD'*B_u'/2 ...
                    ]<=-eps*eye(2*n_x)...
                ];    
    end
    
    if ~isempty(c_H2)
        
        YH2 = sdpvar(n_y,n_y,'symmetric');
        pH2 = sdpvar(1,1,'symmetric');   
        LMIs = [ LMIs, A_x*XD+XD*A_x'+...
                 B_u*WD+WD'*B_u'+...
                 B_d*B_d'<=-eps*eye(n_x) ];
        LMIs = [ LMIs,...
                    YH2>=eps*eye(n_y),...
                    trace(YH2)<=pH2,...
                    pH2>=eps ];
        LMIs = [LMIs,...
            [ -YH2, C_x2*XD+D_u2*WD; XD'*C_x2'+WD'*D_u2', -XD ]<=...
                -eps*eye(n_y+n_x,n_y+n_x) ]        
    end
    
    if ~isempty(c_Hinf)
        pHinf = sdpvar(1,1,'symmetric');   
        LMIs = [ LMIs,...
                    pHinf>=eps,...
                    [   A_x*XD+XD*A_x'+B_u*WD+WD'*B_u',...
                        B_d, XD*C_xinf'+WD'*D_uinf';...
                        B_d', -pHinf*eye(n_d), D_dinf';...
                        C_xinf*XD+D_uinf*WD,...
                        D_dinf, -pHinf*eye(n_z)...
                    ]<=-eps*eye(n_x+n_d+n_z)...
                ];
    end
    
    if ~isempty(c_H2)
         if ~isempty(c_Hinf)
            optimize(LMIs,c_H2*pH2+c_Hinf*pHinf,Yalmip_sdpsettings); 
         else
             optimize(LMIs,c_H2*pH2,Yalmip_sdpsettings);
         end
    else
        if ~isempty(c_Hinf)
            optimize(LMIs,c_Hinf*pHinf,Yalmip_sdpsettings); 
         else
             optimize(LMIs,[],Yalmip_sdpsettings);
         end
    end
    
    optimal_WD = value(WD);
    optimal_XD = value(XD);
    optimal_Kpf=optimal_WD/optimal_XD;
end

